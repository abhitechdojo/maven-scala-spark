<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dealer.analytics</groupId>
    <artifactId>SparkIntegrationTest</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>SparkIntegrationTest</name>

    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/integration-test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.abhi.HelloWorld</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>SparkIntegrationTestsAssembly</finalName>
                </configuration>
                <executions>
                    <execution>
                        <id>assemble-all</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainSourceDir>src/main/scala</mainSourceDir>
                    <mainOutputDir>target</mainOutputDir>
                    <testSourceDir>src/test/scala</testSourceDir>
                    <testOutputDir>target/test-classes</testOutputDir>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>org.scalamacros</groupId>
                            <artifactId>paradise_2.10.4</artifactId>
                            <version>2.0.1</version>
                        </compilerPlugin>
                    </compilerPlugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.wouterdanes.docker</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>5.0.0</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <goals>
                            <goal>build-images</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <id>cloudera</id>
                                    <dockerFile>${project.basedir}/src/integration-test/docker/Dockerfile</dockerFile>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/SparkIntegrationTestsAssembly.jar</file>
                                            <dest>/SparkIntegrationTestsAssembly.jar</dest>
                                        </artifact>
                                        <artifact>
                                            <file>${project.build.directory}/test-classes/twitter.avro</file>
                                            <dest>/twitter.avro</dest>
                                        </artifact>
                                    </artifacts>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start</id>
                        <goals>
                            <goal>start-containers</goal>
                        </goals>
                        <configuration>
                            <!-- You can set forceCleanup to true to stop and remove started containers
                                 at the end of the build even if the stop-containers goal is not executed
                                 (useful for preventing Ctrl+C causing dangling containers) -->
                            <forceCleanup>false</forceCleanup>
                            <containers>
                                <container>
                                    <id>cloudera</id>
                                    <image>cloudera/quickstart</image>
                                    <!--
                                    <links>
                                        <link>
                                            <containerId>mongo</containerId>
                                            <containerAlias>mongo</containerAlias>
                                        </link>
                                    </links>
                                    <env>
                                        <APP_MESSAGE>Hello, world!</APP_MESSAGE>
                                    </env>
                                    -->
                                    <waitForStartup>Started Impala Server</waitForStartup>
                                </container>
                            </containers>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop-containers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <testSourceDirectory>src/integration-test/java</testSourceDirectory>
                    <additionalClasspathElements>
                        <additionalClasspathElement>src/integration-test/resources</additionalClasspathElement>
                    </additionalClasspathElements>
                    <systemProperties>
                        <cloudera.base>http://${docker.containers.app.ports.8080/tcp.host}:${docker.containers.app.ports.8080/tcp.port}</cloudera.base>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>2.10.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.10</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.10</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>com.databricks</groupId>
            <artifactId>spark-avro_2.10</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>1.2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.7.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.10</artifactId>
            <version>2.2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_2.10</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>